buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.71"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

plugins {
    id 'de.undercouch.download' version '4.0.0'
    id "com.diffplug.gradle.spotless" version "3.25.0"
    id 'io.codearte.nexus-staging' version '0.21.1'
    id "de.marcphilipp.nexus-publish" version '0.4.0'
}

description = 'Web3j-openapi-poc project.'

ext {
    web3jVersion = "4.5.16"
    bouncycastleVersion = '1.61'
    slf4jVersion = '1.7.25'
    // test
    junitVersion = '5.5.2'
    logbackVersion = '1.2.3'
    mockitoJunitVersion = "3.1.0"
    junitPlatformLauncherVersion = "1.5.2"
}



subprojects {

    apply plugin: "kotlin"


    repositories {
        mavenCentral()
        jcenter()
    }

    apply {
        [
                'bintray',
                'publish',
                'jacoco',
                'java',
                'javadoc',
                'repositories',
                'spotless'
        ].each { buildScript ->
            download {
                src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
                dest "$rootDir/gradle/$buildScript/build.gradle"
                overwrite true
                quiet true
                onlyIfModified true
            }
            from("$rootDir/gradle/$buildScript/build.gradle")
        }
    }

    tasks.withType(Test) {
        reports.html.destination = file("${reporting.baseDir}/${name}")
        useJUnitPlatform()
    }

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation "io.github.microutils:kotlin-logging:1.6.10"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        testCompile "org.junit.jupiter:junit-jupiter:$junitVersion"
        testCompile "org.mockito:mockito-junit-jupiter:$mockitoJunitVersion"
    }


    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    sourceCompatibility = 1.8



}