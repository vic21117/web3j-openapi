package {{packageName}}.core.{{contractName}}.events

{{#modelImports}}
    {{import}}
{{/modelImports}}
import io.swagger.v3.oas.annotations.Operation
import org.web3j.openapi.core.EventResource
import org.web3j.openapi.core.models.TransactionReceiptModel
import java.util.concurrent.CompletableFuture
import java.util.function.Consumer
import javax.annotation.Generated
import javax.ws.rs.POST
import javax.ws.rs.Produces
import javax.ws.rs.Consumes
import javax.ws.rs.core.MediaType

@Generated
interface {{eventName}}EventResource : EventResource<{{eventName}}EventResponse> {

    @POST
    @Produces(MediaType.APPLICATION_JSON)
    @Consumes(MediaType.APPLICATION_JSON)
    @Operation(
        tags = ["{{contractNameCap}} Events"],
        summary = "Get the {{eventName}} event"
    )
    override fun findBy(transactionReceiptModel: TransactionReceiptModel): List<{{eventName}}EventResponse>

    override fun onEvent(onEvent: Consumer<{{eventName}}EventResponse>): CompletableFuture<Void> =
            CompletableFuture.completedFuture(null)
}
