/*
 * Copyright 2020 Web3 Labs Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package {{packageName}}.server.{{lowerCaseContractName}}

import {{packageName}}.core.{{lowerCaseContractName}}.{{capitalizedContractName}}Lifecycle
import {{packageName}}.core.{{lowerCaseContractName}}.model.{{capitalizedContractName}}DeployParameters
import org.web3j.{{lowerCaseContractName}}.{{capitalizedContractName}} // FIXME: Generate the wrappers
import org.web3j.protocol.Web3j
import org.web3j.protocol.core.methods.response.TransactionReceipt
import org.web3j.tx.TransactionManager
import org.web3j.tx.gas.ContractGasProvider
import javax.annotation.processing.Generated
import javax.ws.rs.Consumes
import javax.ws.rs.Produces
import javax.ws.rs.core.MediaType

@Generated
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
class {{capitalizedContractName}}LifecycleImpl(
    private val web3j: Web3j,
    private val transactionManager: TransactionManager,
    private val defaultGasProvider: ContractGasProvider
) : {{capitalizedContractName}}Lifecycle {

    override fun deploy(parameters: {{capitalizedContractName}}DeployParameters): TransactionReceipt {
        val {{lowerCaseContractName}} = {{capitalizedContractName}}.deploy(
            web3j,
            transactionManager,
            defaultGasProvider,
            parameters.{{lowerCaseContractName}}
        ).send()

        return {{lowerCaseContractName}}.transactionReceipt.get()
    }

    override fun load(contractAddress: String) =
{{capitalizedContractName}}ResourceImpl(
{{capitalizedContractName}}.load(contractAddress, web3j, transactionManager, defaultGasProvider)
        )
}